/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ractoc.fs.templates.editor.entity;

import com.ractoc.fs.es.EntityComponent;
import com.ractoc.fs.templates.editor.EtplTopComponent;
import java.awt.BorderLayout;
import java.io.IOException;
import javax.swing.JDialog;

/**
 *
 * @author ractoc
 */
public class AddComponentDialog extends JDialog {

    private ComponentEditorPanel componentEditor;
    private ModificationListener listener;
    private EtplTopComponent topComponent;
    private boolean ok;

    /**
     * Creates new form AddComponentDialog
     */
    public AddComponentDialog(EtplTopComponent topComponent, ModificationListener listener) {
        super();
        this.topComponent = topComponent;
        this.listener = listener;
        setModal(true);
        initComponents();
        setupComponentEditorPanel();
    }

    public boolean isOk() {
        return ok;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel2.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelButton);

        jPanel1.add(jPanel2, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        //listener.setModified(true);
        setVisible(false);
        ok = true;
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        ok = false;
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private void setupComponentEditorPanel() {
        try {
            createComponentEditor();
        } catch (IOException ex) {
            handleError(ex);
        }
    }

    private void handleError(Exception ex) {
        ex.printStackTrace();
            topComponent.displayErrorMessage("unable to create AddComponentDialog.");
    }

    private void createComponentEditor() throws IOException {
        componentEditor = new ComponentEditorPanel(topComponent);
        componentEditor.createEditorForNewComponent();
        add(componentEditor, BorderLayout.CENTER);
    }

    public EntityComponent getEntityComponent() {
        return componentEditor.getEntityComponent();
    }
}
